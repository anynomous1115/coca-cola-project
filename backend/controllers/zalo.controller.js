const zaloService = require("../services/zalo.service");
const aiService = require("../services/ai.service");
const responseHandler = require("../helpers/responseHandler");

class ZaloController {
  // Webhook nh·∫≠n tin nh·∫Øn t·ª´ Zalo OA
  async handleWebhook(req, res) {
    try {
      const { event_name, app_id, user_id_by_app, data } = req.body;

      console.log("üì± Zalo webhook received:", { event_name, user_id_by_app });

      if (event_name === "user_send_text") {
        // X·ª≠ l√Ω tin nh·∫Øn vƒÉn b·∫£n
        const userMessage = data.content;
        const zaloUserId = user_id_by_app;

        // G·ª≠i cho AI Agent x·ª≠ l√Ω
        const aiResponse = await aiService.processMessage({
          userId: zaloUserId,
          message: userMessage,
          platform: "zalo",
        });

        // G·ª≠i response v·ªÅ Zalo
        await zaloService.sendMessage(zaloUserId, aiResponse);
      } else if (event_name === "user_send_image") {
        // X·ª≠ l√Ω h√¨nh ·∫£nh (c√≥ th·ªÉ l√† ·∫£nh s·∫£n ph·∫©m ƒë·ªÉ t√¨m ki·∫øm)
        const imageUrl = data.content;

        const aiResponse = await aiService.processImage({
          userId: user_id_by_app,
          imageUrl: imageUrl,
        });

        await zaloService.sendMessage(user_id_by_app, aiResponse);
      }

      return responseHandler.successHandler(
        res,
        null,
        "Webhook processed",
        200
      );
    } catch (error) {
      console.error("‚ùå Zalo webhook error:", error);
      return responseHandler.errorHandler(res, {
        code: 500,
        message: "Webhook processing failed",
      });
    }
  }

  // Test g·ª≠i tin nh·∫Øn
  async sendTestMessage(req, res) {
    try {
      const { userId, message } = req.body;

      const result = await zaloService.sendMessage(userId, message);

      return responseHandler.successHandler(res, result, "Message sent", 200);
    } catch (error) {
      console.error("‚ùå Send message error:", error);
      return responseHandler.errorHandler(res, {
        code: 500,
        message: "Failed to send message",
      });
    }
  }
}

module.exports = new ZaloController();
